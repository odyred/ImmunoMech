using System;
using System.Collections.Generic;
using System.Text;
using ISAAR.MSolve.Discretization.Integration;

namespace ISAAR.MSolve.Discretization.Integration.Quadratures
{
	//TODO: Include theory.
	/// <summary>
	/// Enum class with the 2D integration rules for tetrahedra of varying orders. These are not tensor product of
	/// simple <see cref="GaussLegendre1D_old"/> rules. Quadrature rules were provided in https://www.code-aster.org/V2/doc/v11/en/man_r/r3/r3.01.01.pdf
	/// Authors: Dimitris Tsapetis
	/// </summary>
	public sealed class TetrahedronQuadrature:IQuadrature3D
	{
		public static readonly TetrahedronQuadrature Order1Point1 = new TetrahedronQuadrature(
			new GaussPoint(1 / 4.0, 1 / 4.0, 1 / 4.0, 1 / 6.0));

		public static readonly TetrahedronQuadrature Order2Points4 = new TetrahedronQuadrature(
			new GaussPoint(0.138200000000000000000000, 0.138200000000000000000000, 0.138200000000000000000000, 0.04170000000000000000000000000),
			new GaussPoint(0.138200000000000000000000, 0.138200000000000000000000, 0.585400000000000000000000, 0.04170000000000000000000000000),
			new GaussPoint(0.138200000000000000000000, 0.585400000000000000000000, 0.138200000000000000000000, 0.04170000000000000000000000000),
			new GaussPoint(0.585400000000000000000000, 0.138200000000000000000000, 0.138200000000000000000000, 0.04170000000000000000000000000));

		public static readonly TetrahedronQuadrature Order3Points5 = new TetrahedronQuadrature(
			new GaussPoint(0.250000000000000000000000, 0.250000000000000000000000, 0.250000000000000000000000, -0.1333000000000000000000000000),
			new GaussPoint(0.166666666666666666666667, 0.166666666666666666666667, 0.166666666666666666666667, 0.07500000000000000000000000000),
			new GaussPoint(0.166666666666666666666667, 0.166666666666666666666667, 0.500000000000000000000000, 0.07500000000000000000000000000),
			new GaussPoint(0.166666666666666666666667, 0.500000000000000000000000, 0.166666666666666666666667, 0.07500000000000000000000000000),
			new GaussPoint(0.500000000000000000000000, 0.166666666666666666666667, 0.166666666666666666666667, 0.07500000000000000000000000000));

		// TODO: Implement rules 8,14,24 in natural coordinates according to  https://www.colorado.edu/engineering/CAS/courses.d/AFEM.d/AFEM.Ch10.d/AFEM.Ch10.pdf

		public static readonly TetrahedronQuadrature Order5Points15 = new TetrahedronQuadrature(
			new GaussPoint(0.250000000000000000000000, 0.250000000000000000000000, 0.250000000000000000000000, 0.01234567901234600000000000000),

			new GaussPoint(0.319793627829630000000000, 0.319793627829630000000000, 0.319793627829630000000000, 0.01151136787104500000000000000),
			new GaussPoint(0.319793627829630000000000, 0.319793627829630000000000, 0.040619116511110000000000, 0.01151136787104500000000000000),
			new GaussPoint(0.319793627829630000000000, 0.040619116511110000000000, 0.319793627829630000000000, 0.01151136787104500000000000000),
			new GaussPoint(0.040619116511110000000000, 0.319793627829630000000000, 0.319793627829630000000000, 0.01151136787104500000000000000),

			new GaussPoint(0.091971078052723000000000, 0.091971078052723000000000, 0.091971078052723000000000, 0.01198951396317000000000000000),
			new GaussPoint(0.091971078052723000000000, 0.091971078052723000000000, 0.724086765841831000000000, 0.01198951396317000000000000000),
			new GaussPoint(0.091971078052723000000000, 0.724086765841831000000000, 0.091971078052723000000000, 0.01198951396317000000000000000),
			new GaussPoint(0.724086765841831000000000, 0.091971078052723000000000, 0.091971078052723000000000, 0.01198951396317000000000000000),

			new GaussPoint(0.056350832689629000000000, 0.056350832689629000000000, 0.443649167310371000000000, 0.00881834215167500000000000000),
			new GaussPoint(0.056350832689629000000000, 0.443649167310371000000000, 0.056350832689629000000000, 0.00881834215167500000000000000),
			new GaussPoint(0.443649167310371000000000, 0.056350832689629000000000, 0.056350832689629000000000, 0.00881834215167500000000000000),
			new GaussPoint(0.056350832689629000000000, 0.443649167310371000000000, 0.443649167310371000000000, 0.00881834215167500000000000000),
			new GaussPoint(0.443649167310371000000000, 0.056350832689629000000000, 0.443649167310371000000000, 0.00881834215167500000000000000),
			new GaussPoint(0.443649167310371000000000, 0.443649167310371000000000, 0.056350832689629000000000, 0.00881834215167500000000000000));

	    private TetrahedronQuadrature(params GaussPoint[] points)
	    {
		    this.IntegrationPoints = new List<GaussPoint>(points);
	    }

	    public IReadOnlyList<GaussPoint> IntegrationPoints { get; }
	}
}
